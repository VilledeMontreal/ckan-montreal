{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","utils/index.js","reducers/widgets.js","reducers/datapackage.js","reducers/datastoreFilters.js","reducers/serializedState.js","reducers/rootReducer.js","store.js","components/DataView/index.js","components/Share/index.js","utils/loadDataset.js","actions/index.js","App.js","AppWithProvider.js","serviceWorker.js","index.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","unloadDatapackage","datapackage","unloadedDatapackage","deepClone","resources","forEach","resource","data","_values","views","view","obj","JSON","parse","stringify","reducers_widgets","state","arguments","length","undefined","action","type","stateForChartBuilder","widget","specType","payload","assign","stateForMapBuilder","widgets","reducers_datapackage","datastoreFilters","reducers_serializedState","root","clonedRoot","serializedState","loading","console","warn","rootReducer","initialState","configureStore","props","createStore","composeWithDevTools","applyMiddleware","thunk","DataView","react_default","a","createElement","react_loader_default","loaded","style","position","dist_App","key","Math","random","slimProps","Share","prop","slim","origin","document","location","shareLink","concat","iframe","shareable","copy","str","el","value","setAttribute","left","body","appendChild","select","execCommand","removeChild","className","htmlFor","href","onClick","toArray","require","parseDatapackageIdentifier","stringOrJSON","loadDataset","_ref","asyncToGenerator","regenerator_default","mark","_callee2","dpID","DP_ID","tabularFormats","dataset","wrap","_context2","prev","next","Dataset","load","sent","Promise","all","_ref2","_callee","file","response","result","rowStream","_response","_result","_context","displayName","abrupt","descriptor","path","includes","fetch","ok","unavailable","json","records","format","rows","size","keyed","addSchema","t0","toLowerCase","stop","_x2","apply","this","_x","selectTab","res","_objectSpread","datapackageLoad","fetchDataBegin","fetchDataSuccess","connect","App_objectSpread","dispatch","filterUIAction","getState","newResource","updatedDatapackage","loadingWidgets","loadedDataset","datastore_active","compileView","fetchDataAction","_x3","dataViewBuilderAction","actionType","selectTabAction","index","active","name","useEffect","activeWidget","find","selectedTab","tabLinks","lib","to","tabContents","for","chart_builder_dist","map_builder_dist","dist","filterBuilderAction","renderActiveTabContentOnly","handleSelect","AppWithProvider","_unused","log","widgetNames","table","tabularmap","simple","widgetsFromViews","es","store","src_App_0","Boolean","window","hostname","match","instances","getElementsByClassName","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","done","instance","getAttribute","rest","objectWithoutProperties","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05bd9c8a.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 454,\n\t\"./table-schema.json\": 890,\n\t\"./topojson.json\": 455\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 889;","export const unloadDatapackage = datapackage => {\n  const unloadedDatapackage = deepClone(datapackage)\n  \n  unloadedDatapackage.resources && unloadedDatapackage.resources.forEach(resource => {\n    delete resource.data\n    delete resource._values\n  })\n  \n  unloadedDatapackage.views && unloadedDatapackage.views.forEach(view => {\n    view.resources && view.resources.forEach(resource => {\n      delete resource.data\n      delete resource._values\n    })\n  })\n\n  return unloadedDatapackage\n}\n\nexport const getEmptyView = datapackage => {\n  try {\n    return {resources: [{schema: datapackage.resources[0].schema}]}\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const getDataViewChartBuilderView = (datapackage) => {\n  if (!datapackage) return {}\n\n  const views = datapackage.views || []\n\n  switch (views.length) {\n    case 1:\n      return datapackage.views[0]\n    case 2:\n      return datapackage.views[1]\n    case 3:\n      return datapackage.views[2]\n    default:\n      return getEmptyView(datapackage)\n  }\n}\n\nexport const getDataViewMapBuilderView = (datapackage) => {\n  if (!datapackage) return {}\n\n  const views = datapackage.views || []\n\n  return views.find(view => view.specType === 'tabularmap') || getEmptyView(datapackage)\n}\n\nexport const getResourceForFiltering = (datapackage) => {\n  if (!datapackage) return {}\n  return datapackage.resources[0]\n}\n\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj))\n}\n","import { deepClone } from '../utils'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case 'DATA_VIEW_CHART_BUILDER_ACTION':\n      let stateForChartBuilder = deepClone(state)\n      stateForChartBuilder = stateForChartBuilder.map(widget => {\n        if (widget.datapackage.views[0].specType === 'simple') {\n          widget.datapackage.views[0] = action.payload\n        }\n        return widget\n      })\n      return Object.assign(deepClone(state), stateForChartBuilder)\n    case 'DATA_VIEW_MAP_BUILDER_ACTION':\n      let stateForMapBuilder = deepClone(state)\n      stateForMapBuilder = stateForMapBuilder.map(widget => {\n        if (widget.datapackage.views[0].specType === 'tabularmap') {\n          widget.datapackage.views[0] = action.payload\n        }\n        return widget\n      })\n      return Object.assign(deepClone(state), stateForMapBuilder)\n    case 'SELECT_TAB':\n      return action.payload.widgets\n    case 'FETCH_DATA_BEGIN':\n      return action.payload.widgets\n    case 'FETCH_DATA_SUCCESS':\n      return action.payload.widgets\n    case 'FETCH_DATA_FAILURE':\n      return action.payload.widgets\n    default:\n     return state\n  }\n}\n","export default (state = {}, action) => {\n  switch (action.type) {\n   case 'DATAPACKAGE_LOAD':\n    return action.payload.datapackage\n   default:\n    return state\n  }\n }\n ","export default (state = {}, action) => {\n  switch (action.type) {\n   case 'FILTER_UI_ACTION':\n    return state \n   default:\n    return state\n  }\n }\n ","import { deepClone, unloadDatapackage } from '../utils'\n\n// updates on every action and translates app state to shareable links\nexport default (state = {}, action, root) => {\n  try {\n    const clonedRoot = deepClone(root)\n    delete clonedRoot.serializedState\n    const datapackage = unloadDatapackage(clonedRoot.datapackage)\n    const widgets = clonedRoot.widgets.map(widget => {\n      widget.datapackage = unloadDatapackage(widget.datapackage)\n      widget.loading = false\n      return widget\n    })\n\n    return JSON.stringify(Object.assign(clonedRoot, {datapackage, widgets}))\n  } catch (e) {\n    console.warn(e)\n    return {}\n  }\n}\n","import { default as widgets } from './widgets'\nimport { default as datapackage } from './datapackage'\nimport { default as datastoreFilters } from './datastoreFilters'\nimport { default as serializedState } from './serializedState'\n\nexport default (state = {}, action) => {\n  return {\n    widgets: widgets(state.widgets, action),\n    datapackage: datapackage(state.datapackage, action),\n    datastoreFilters: datastoreFilters(state.datastoreFilters, action),\n    serializedState: serializedState(state.serializedState, action, state) // we pass root of tree so it can export entire app state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nconst initialState = {\n  datastoreFilters: {\n    // Datastore specific filters\n  },\n  datapackage: {},\n  widgets: [],\n  serializedState: {}\n}\n\nexport default function configureStore(props) {\n \n return createStore(\n   rootReducer,\n   Object.assign({}, initialState, props),\n   composeWithDevTools(applyMiddleware(thunk))\n )\n}\n","import React from 'react'\nimport Loader from 'react-loader'\nimport { DataView } from '@datopian/datapackage-views-js'\n\nexport default props => {\n  const views = props.datapackage.views\n\n  return (\n  <Loader loaded={!props.loading} style={{position: \"relative\"}}>\n    <div>\n     {\n        views.map(view => <DataView key={Math.random()} datapackage={{views: [view]}} />)\n     }\n    </div>\n  </Loader>\n  )\n}\n","import React from 'react'\nimport ReactDom from 'react-dom'\n\nconst MAX_LEN = 1500\nconst slimProps = ['archiver', 'schema', 'shareLink', 'iframeText']\nconst slim = serializedState => {\n  if (serializedState.length <= MAX_LEN) return serializedState\n  const state = JSON.parse(serializedState)\n  state.datapackage.resources.forEach(resource => {\n    for (const prop in slimProps) {\n      if (resource[slimProps[prop]]) delete resource[slimProps[prop]]\n    }\n  })\n  return JSON.stringify(state)\n}\n\nexport default props => {\n  const serializedState = slim(props.serializedState)\n  // TODO this is a stub for montreal -- need to pass origin as props\n  const origin = document.location.origin\n  const shareLink = `${origin}/explorer?explorer=${serializedState}`\n  const iframe = `<iframe src=\"${origin}/data-explorer?explorer=${serializedState}\" />`\n  const shareable = shareLink.length < 2000\n\n  const copy = (str) => {\n    // Create new element\n    var el = document.createElement('textarea')\n    // Set value (string to be copied)\n    el.value = str\n    // Set non-editable to avoid focus and move outside of view\n    el.setAttribute('readonly', '')\n    el.style = {position: 'absolute', left: '-9999px'}\n    document.body.appendChild(el)\n    // Select text inside element\n    el.select()\n    // Copy text to clipboard\n    document.execCommand('copy')\n    // Remove temporary element\n    document.body.removeChild(el)\n  }\n\n  return (\n  <div>\n    {shareable &&\n      <div>\n        <div className=\"m-4\">\n          <label htmlFor=\"share-link\" className=\"mr-4\">Share link</label>\n          <input id=\"share-link\" className=\"border-solid border-4 border-gray-600 w-1/2 px-2\" value={shareLink} />\n          <a href=\"#\" id=\"copy-share-link\" className=\"m-4\" onClick={() => {copy(shareLink)}}><i>copy</i></a>\n        </div>\n        <div className=\"m-4\">\n          <label htmlFor=\"embed\" className=\"mr-4\">Share link</label>\n          <input id=\"embed\" className=\"border-solid border-4 border-gray-600 px-2 w-1/2\" value={iframe} />\n          <a href=\"#\" id=\"copy-share-link\" className=\"m-4\" onClick={() => {copy(iframe)}}><i>copy</i></a>\n        </div>\n      </div>\n    }\n    {!shareable &&\n      <p>No share link available</p>\n    }\n    </div>\n  )\n}\n","import { Dataset } from 'data.js'\n\nvar toArray = require('stream-to-array')\n\nfunction parseDatapackageIdentifier(stringOrJSON) {\n  try {\n    return JSON.parse(stringOrJSON)\n  } catch (e) {\n    return stringOrJSON\n  }\n}\n\n// needs to be encapsulated\n// should be library code\nexport default async dpID => {\n  const DP_ID = parseDatapackageIdentifier(dpID)\n  const tabularFormats = ['csv', 'tsv', 'dsv', 'xls', 'xlsx']\n\n  try {\n    const dataset = await Dataset.load(DP_ID)\n\n    await Promise.all(dataset.resources.map(async (file) => {\n      if (file.displayName === 'FileInline') {\n        return\n      } else if (file.descriptor.path && file.descriptor.path.includes('datastore_search')) {\n        // Datastore, e.g., when a path is a 'datastore_search' API\n        const response = await fetch(file.descriptor.path)\n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        file.descriptor.data = result.result.records\n      } else if (file.displayName === \"FileRemote\" && tabularFormats.includes(file.descriptor.format)) {\n        // Tabular data\n        try {\n          const rowStream = await file.rows({size: 100, keyed: true})\n          const data = await toArray(rowStream)\n          if (data.length > 0) {\n            file.descriptor.data = data // This makes it FileInline\n          } else {\n            file.descriptor.unavailable = true\n          }\n          await file.addSchema()\n        } catch (e) {\n          console.warn(e)\n          file.descriptor.unavailable = true\n        }\n      } else if (file.descriptor.format.toLowerCase().includes('json')) {\n        // Geographical data\n        const response = await fetch(file.descriptor.path)\n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        // The '.json' files can contain geo data - check by its 'type' property\n        const geoJsonTypes = [\n          'Feature', 'FeatureCollection', 'Point', 'MultiPoint', 'LineString',\n          'MultiLineString', 'Polygon', 'MultiPolygon', 'GeometryCollection'\n        ]\n        if (geoJsonTypes.includes(result.type)) {\n          file.descriptor.data = result\n        } else {\n          // It isn't a valid GeoJSON\n          file.descriptor.unavailable = true\n          return\n        }\n      } else if (file.descriptor.format.toLowerCase() === 'pdf') {\n        return\n      } else {\n        // We can't load any other data types for now.\n        file.descriptor.unavailable = true\n      }\n    }))\n\n    return dataset.descriptor\n  } catch (e) {\n    console.warn('Failed to load a Dataset from provided datapackage id\\n' + e)\n    return DP_ID\n  }\n}\n","import loadDataset from '../utils/loadDataset'\nimport { compileView } from 'datapackage-render';\n\nexport const selectTabAction = (payload) => (dispatch, getState) => {\n  const widgets = JSON.parse(JSON.stringify(getState().widgets))\n  widgets.forEach((widget, index) => {\n    widgets[index].active = false\n    if (widget.name === payload) {\n      widgets[index].active = true\n    }\n  })\n  dispatch(selectTab({widgets}))\n}\n\nexport const filterUIAction = (payload) => async (dispatch, getState) => {\n let datapackage = JSON.parse(JSON.stringify(getState().datapackage))\n // For datastore resources, we need to remove loaded `data` attribute to\n // trigger re-fetch of a resource. This is required since we initially fetch\n // only subset of data from datastore, eg, first 100 rows. When user applies\n // filters, we need to hit datastore api and update the data.\n const newResource = JSON.parse(JSON.stringify(payload))\n const updatedDatapackage = Object.assign(datapackage, {resources: [newResource]})\n if (updatedDatapackage.resources[0].datastore_active) {\n   delete updatedDatapackage.resources[0].data\n }\n // Update state.datapackage with new resource path that includes filters (datastore query)\n dispatch(datapackageLoad({datapackage: updatedDatapackage}))\n // Set state of widgets as loading\n const loadingWidgets = JSON.parse(JSON.stringify(getState().widgets))\n    .map(widget => {\n      widget.loading = true\n      return widget\n    })\n  dispatch(fetchDataBegin({widgets: loadingWidgets}))\n  // Load dataset using new path and update state\n  datapackage = JSON.parse(JSON.stringify(getState().datapackage))\n  const loadedDataset = await loadDataset(datapackage)\n  dispatch(datapackageLoad({datapackage: loadedDataset}))\n  // Compile new data into widget views\n  const widgets = JSON.parse(JSON.stringify(getState().widgets))\n    .map(widget => {\n      widget.datapackage.views = widget.datapackage.views\n        .map(view => compileView(view, loadedDataset))\n      widget.loading = false\n      return widget\n    })\n  dispatch(fetchDataSuccess({widgets}))\n}\n\nexport const dataViewBuilderAction = (payload) => dispatch => {\n  let actionType\n  if (payload.specType === 'simple') {\n    actionType = 'DATA_VIEW_CHART_BUILDER_ACTION'\n  } else if (payload.specType === 'tabularmap') {\n    actionType = 'DATA_VIEW_MAP_BUILDER_ACTION'\n  }\n  dispatch({\n    type: actionType,\n    payload\n  })\n}\n\nexport const fetchDataAction = payload => async dispatch => {\n  const loadingWidgets = JSON.parse(JSON.stringify(payload.widgets))\n    .map(widget => {\n      widget.loading = true\n      return widget\n    })\n  dispatch(fetchDataBegin({widgets: loadingWidgets}))\n  const datapackage = JSON.parse(JSON.stringify(payload.datapackage))\n  const loadedDataset = await loadDataset(datapackage)\n  dispatch(datapackageLoad({datapackage: loadedDataset}))\n  const widgets = JSON.parse(JSON.stringify(payload.widgets))\n    .map(widget => {\n      widget.datapackage.views = widget.datapackage.views\n        .map(view => compileView(view, loadedDataset))\n      return widget\n    })\n  dispatch(fetchDataSuccess({widgets}))\n}\n\nconst selectTab = res => ({\n  type: 'SELECT_TAB',\n  payload: { ...res }\n})\n\nconst datapackageLoad = res => ({\n  type: 'DATAPACKAGE_LOAD',\n  payload: { ...res }\n})\n\nconst fetchDataBegin = res => ({\n  type: 'FETCH_DATA_BEGIN',\n  payload: { ...res }\n})\n\nconst fetchDataSuccess = res => ({\n  type: 'FETCH_DATA_SUCCESS',\n  payload: { ...res }\n})\n\nconst fetchDataFailure = err => ({\n  type: 'FETCH_DATA_FAILURE',\n  payload: { err }\n})\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport './App.css'\nimport { QueryBuilder } from 'datastore-query-builder'\nimport DataView from './components/DataView'\nimport Share from './components/Share'\nimport { ChartBuilder } from 'chart-builder'\nimport { MapBuilder } from 'map-builder'\nimport { Tabs, TabLink, TabContent } from 'react-tabs-redux'\nimport { filterUIAction, fetchDataAction, dataViewBuilderAction, selectTabAction } from './actions/'\nimport { getResourceForFiltering } from './utils'\n\nexport const App = props => {\n  useEffect(() => {\n    const payload = {\n      datapackage: props.datapackage,\n      widgets: props.widgets\n    }\n    props.fetchDataAction(payload)\n  }, [])\n\n  const activeWidget = props.widgets.find(widget => {\n    return widget.active\n  })\n\n  const selectedTab = activeWidget ? activeWidget.name : props.widgets[0].name\n  const tabLinks = props.widgets.map((widget) => {\n    return <TabLink to={widget.name} className='mr-4'>{widget.name}</TabLink>\n  })\n  const tabContents = props.widgets.map((widget) => {\n    return <TabContent for={widget.name}>\n      <div className=\"container flex py-6\">\n        <div className=\"w-3/4 py-3 mr-4\">\n          <DataView {...widget} />\n        </div>\n        <div className=\"w-1/4\">\n          <div className=\"w-full\">\n            <div className=\"p-4 mr-4\">\n              {\n                widget.datapackage.views[0].specType === 'simple'\n                ? <ChartBuilder view={widget.datapackage.views[0]} dataViewBuilderAction={props.dataViewBuilderAction} />\n                : ''\n              }\n              {\n                widget.datapackage.views[0].specType === 'tabularmap'\n                ? <MapBuilder view={widget.datapackage.views[0]} dataViewBuilderAction={props.dataViewBuilderAction} />\n                : ''\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </TabContent>\n  })\n\n  return (\n    <div className=\"ml-6\">\n      {/* Data Editor (aka filters / datastore query builder) */}\n      <div className=\"container py-4\">\n        <div className=\"datastore-query-builder\">\n          {\n            props.datapackage.resources[0].datastore_active\n            ? <QueryBuilder resource={getResourceForFiltering(props.datapackage)} filterBuilderAction={props.filterUIAction} />\n            : ''\n          }\n        </div>\n      </div>\n      {/* End of Data Editor */}\n\n      {/* Widgets (aka Views and Controls/Builders) */}\n      <Tabs \n        renderActiveTabContentOnly={true}\n        handleSelect={(selectedTab) => {\n          props.selectTabAction(selectedTab)\n        }}\n        selectedTab={selectedTab}>\n          {tabLinks}\n          {tabContents}\n      </Tabs>\n      <Share serializedState={props.serializedState} />\n      {/* End of Widgets */}\n     </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n filterUIAction: (payload) => dispatch(filterUIAction(payload)),\n fetchDataAction: payload => dispatch(fetchDataAction(payload)),\n dataViewBuilderAction: payload => dispatch(dataViewBuilderAction(payload)),\n selectTabAction: payload => dispatch(selectTabAction(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport './App.css'\nimport App from './App'\n\nexport default props => {\n  let datapackage\n  \n  // Allow datapackage json or obj\n  if (typeof props.datapackage === 'string') {\n    try {\n      datapackage = JSON.parse(props.datapackage)\n    } catch (e) {\n      // TODO -- would be nice for the app to still load in an empty state on fail case\n      datapackage = {}\n      console.warn('Invalid datapackage', e)\n    }\n  } else if (typeof props.datapackage === 'object') {\n    datapackage = props.datapackage\n  }\n  \n  let views\n  \n  try {\n    views = JSON.parse(JSON.stringify(datapackage.views))\n    delete datapackage.views\n  } catch {\n    console.log('No views set on datapackage')\n  }\n\n  const widgetsFromViews = (views) => {\n    const widgetNames = {\n      'table': 'Table',\n      'tabularmap': 'Map',\n      'map': 'Map',\n      'simple': 'Chart'\n    }\n\n    return views.map((view, index) => {\n      return {\n        active: index === 0 ? true : false,\n        name: widgetNames[view.specType],\n        datapackage: {views: [view]}\n      }\n    })\n  }\n\n  const widgets = (props.widgets) ? props.widgets : widgetsFromViews(views)\n\n  return (\n    <Provider store={configureStore({widgets, datapackage})}>\n      <App />\n    </Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\nimport App from './AppWithProvider'\nimport * as serviceWorker from './serviceWorker';\n\nconst instances = document.getElementsByClassName('data-explorer')\n\nfor (const instance of instances) {\n  try {\n    const props = JSON.parse(instance.getAttribute('data-datapackage'))\n    const { datapackage, ...rest} = props\n\n    ReactDOM.render(\n      <App datapackage={datapackage} {...rest} />, document.getElementById(instance.id)\n    )\n  } catch (e) {\n    console.warn('Failed to render data-explorer', e)\n  }\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}